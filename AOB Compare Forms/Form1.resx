<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>297, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>